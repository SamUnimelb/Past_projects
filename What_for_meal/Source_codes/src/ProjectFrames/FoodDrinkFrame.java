package ProjectFrames;

import BasicEntities.FoodDrink;
import DBLinkers.FoodDrinkLinker;
import DBLinkers.FoodImageLinker;
import java.io.File;
import java.sql.SQLException;
import java.util.LinkedList;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Administrator
 */
public class FoodDrinkFrame extends JFrame{

    /**
     * Creates new form FoodDrinkFrame
     */
    public FoodDrinkFrame() {
        foodDrink = new FoodDrink();
        updateFoodDrinkList();        
        initComponents();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);       
    }//end cons

    private void updateFoodDrinkList() {
        foodDrinkLinker = new FoodDrinkLinker();
        foodDrinkList = foodDrinkLinker.getAllFoodDrink();
        foodDrinkStrList = new LinkedList<>();
        foodDrinkList.forEach((fd) -> {
            foodDrinkStrList.add(fd.getFoodDrinkName() + "-" + fd.getFoodDrinkChinesename());
        });
        foodDrinkStrs = (String[]) foodDrinkStrList.toArray(new String[foodDrinkStrList.size()]);
        if(foodJCombo != null)
            foodJCombo.setModel(new javax.swing.DefaultComboBoxModel<>(foodDrinkStrs));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        picJChooser = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        foodNameField = new javax.swing.JTextField();
        foodChineseNameField = new javax.swing.JTextField();
        calorieField = new javax.swing.JTextField();
        carboField = new javax.swing.JTextField();
        fatField = new javax.swing.JTextField();
        proteinField = new javax.swing.JTextField();
        vitaField = new javax.swing.JTextField();
        mineralField = new javax.swing.JTextField();
        waterField = new javax.swing.JTextField();
        recordBt = new javax.swing.JButton();
        updateBt = new javax.swing.JButton();
        deleteBt = new javax.swing.JButton();
        imgLabel = new javax.swing.JLabel();
        chooseImageBt = new javax.swing.JButton();
        chooseTasteBt = new javax.swing.JButton();
        foodJCombo = new javax.swing.JComboBox<>();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        picJChooser.setDialogTitle("Choose the food image");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        jLabel1.setText("Name:");
        jLabel1.setToolTipText("Input the name of food / drink.");

        jLabel2.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        jLabel2.setText("Chinese Name:");
        jLabel2.setToolTipText("Input the Chinese name of food / drink, if it has.");

        jLabel3.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        jLabel3.setText("Calorie (KJ):");
        jLabel3.setToolTipText("Input the corresponding paramters of the food / drink, from calorie to water column, if information available. ");

        jLabel4.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        jLabel4.setText("Carbo(g/100g):");
        jLabel4.setToolTipText("Carbo stands for carbohydrates.");

        jLabel5.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        jLabel5.setText("Fats(g/100g):");

        jLabel6.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        jLabel6.setText("Proteins(g/100g):");
        jLabel6.setToolTipText("");

        jLabel7.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        jLabel7.setText("Vitamins(g/100g):");

        jLabel8.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        jLabel8.setText("Minerals(mg/100g):");

        jLabel9.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        jLabel9.setText("Water(g/100g)");
        jLabel9.setToolTipText("If all other parameters are filled, this column can be ignored.");

        foodNameField.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        foodNameField.setText(foodDrinkList.get(0).getFoodDrinkName());
        foodNameField.setToolTipText("");

        foodChineseNameField.setFont(new java.awt.Font("楷体", 1, 24)); // NOI18N
        foodChineseNameField.setText(foodDrinkList.get(0).getFoodDrinkChinesename());
        foodChineseNameField.setToolTipText("");

        calorieField.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        calorieField.setText(String.format("%.2f", foodDrinkList.get(0).getCalorie()));
        calorieField.setToolTipText("");

        carboField.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        carboField.setText(String.format("%.2f",foodDrinkList.get(0).getCarbohydrate()));

        fatField.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        fatField.setText(String.format("%.2f", foodDrinkList.get(0).getFat()));

        proteinField.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        proteinField.setText(String.format("%.2f",foodDrinkList.get(0).getProtein()));

        vitaField.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        vitaField.setText(String.format("%.2f",foodDrinkList.get(0).getVitamin()));

        mineralField.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        mineralField.setText(String.format("%.2f",foodDrinkList.get(0).getMineral()));

        waterField.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        waterField.setText(String.format("%.2f",foodDrinkList.get(0).getWater()));

        recordBt.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        recordBt.setText("Record");
        recordBt.setToolTipText("To add a new food / drink, click this.");
        recordBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordBtActionPerformed(evt);
            }
        });

        updateBt.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        updateBt.setText("Update");
        updateBt.setToolTipText("To change information about an existing food/drink, click this.");
        updateBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtActionPerformed(evt);
            }
        });

        deleteBt.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        deleteBt.setText("Delete");
        deleteBt.setToolTipText("To delete information about certain food/drink, click this.");
        deleteBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtActionPerformed(evt);
            }
        });

        foodDrink = foodDrinkList.get(0);

        FoodImageLinker picLinker = new FoodImageLinker();
        //TODO add your handling code here:

        try {
            imgPath = picLinker.readPicToMemory(foodDrink.getFoodDrinkID());
            File f = new File(imgPath);
            imgLabel.setIcon(new ImageIcon(imgPath));
            imgLabel.setHorizontalAlignment(JLabel.CENTER);
            f.delete();
        } catch (SQLException ex) {
            //It happens, doing nothing.
            imgLabel.setIcon(null);
        }//end try-catch

        chooseImageBt.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        chooseImageBt.setText("Choose image to upload");
        chooseImageBt.setToolTipText("Click record first, and then click upload image.");
        chooseImageBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseImageBtActionPerformed(evt);
            }
        });

        chooseTasteBt.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        chooseTasteBt.setText("Choose Taste");
        chooseTasteBt.setToolTipText("Choose Taste for this food.");
        chooseTasteBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseTasteBtActionPerformed(evt);
            }
        });

        foodJCombo.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        foodJCombo.setModel(new javax.swing.DefaultComboBoxModel<>(foodDrinkStrs));
        foodJCombo.setToolTipText("If food not found, input in the text below:");
        foodJCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                foodJComboItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(recordBt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updateBt, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(deleteBt, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(imgLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(foodNameField)
                                    .addComponent(foodChineseNameField)))
                            .addComponent(foodJCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(carboField)
                                    .addComponent(calorieField)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(proteinField, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(fatField, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(vitaField, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(mineralField, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(waterField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(chooseTasteBt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chooseImageBt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(foodJCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fatField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(proteinField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(foodNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vitaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(foodChineseNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(calorieField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mineralField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(carboField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(waterField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recordBt)
                    .addComponent(updateBt)
                    .addComponent(deleteBt))
                .addGap(18, 18, 18)
                .addComponent(chooseTasteBt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chooseImageBt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(imgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chooseImageBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseImageBtActionPerformed
        // TODO add your handling code here:
         // TODO add your handling code here:
        imgPath = "";
        picJChooser = new JFileChooser();
        picJChooser.setFileFilter(new FileNameExtensionFilter("*.jpg", "*.png", "*.bmp", "jpg", "png", "bmp"));
        int result = picJChooser.showOpenDialog(this);
        
        if(result == JFileChooser.CANCEL_OPTION){
            picJChooser.setVisible(false);
            return;
        }//end if

        File f = picJChooser.getSelectedFile();
        imgPath = f.getAbsolutePath();

        imgLabel.setIcon(new ImageIcon(imgPath));
        imgLabel.setHorizontalAlignment(JLabel.CENTER);
        // TODO add your handling code here:
        FoodImageLinker picLinker = new FoodImageLinker();
        boolean success = picLinker.storePicture(imgPath, foodDrink.getFoodDrinkID());
        String hint = "Store pic " + (success ? "succeed!" : "failed!");
        JOptionPane.showMessageDialog(this, hint);
    }//GEN-LAST:event_chooseImageBtActionPerformed

    private void recordBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordBtActionPerformed
        // TODO add your handling code here:
        foodDrink = new FoodDrink();
        foodDrinkLinker = new FoodDrinkLinker();
        foodDrink.setCalorie(Double.parseDouble(calorieField.getText()));
        foodDrink.setCarbohydrate(Double.parseDouble(carboField.getText()));
        foodDrink.setFat(Double.parseDouble(fatField.getText()));
        if( (foodChineseNameField != null) && (!foodChineseNameField.getText().split(" ").equals("")) )
            foodDrink.setFoodDrinkChinesename(foodChineseNameField.getText());
        foodDrink.setFoodDrinkName(foodNameField.getText());
        foodDrink.setMineral(Double.parseDouble(mineralField.getText()) / 1000);
        foodDrink.setProtein(Double.parseDouble(proteinField.getText()));
        foodDrink.setVitamin(Double.parseDouble(vitaField.getText()));
        float waterAmount = (float)(100.0 - foodDrink.getCarbohydrate() - foodDrink.getFat()
                        - foodDrink.getProtein() - foodDrink.getVitamin() - foodDrink.getMineral());
        waterField.setText(waterAmount + "");
        foodDrinkLinker.setFoodDrink(foodDrink);
        boolean success = foodDrinkLinker.addFoodDrink();
        
        updateFoodDrinkList();
        this.repaint();
        
        String hint = "Add food to database " + (success? "succeed!" : "failed");
        JOptionPane.showMessageDialog(this, hint);
    }//GEN-LAST:event_recordBtActionPerformed

    private void updateBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtActionPerformed
        JOptionPane.showMessageDialog(this, "If name / Chinese name of the food is changed,"
                + "\nplease click record instead of update. ");        
        
        foodDrink = new FoodDrink();
        foodDrinkLinker = new FoodDrinkLinker();

        if ((foodChineseNameField != null) && (!foodChineseNameField.getText().split(" ").equals(""))) {
            foodDrink.setFoodDrinkChinesename(foodChineseNameField.getText());
            foodDrink = foodDrinkLinker.readTheFoodDrinkInfoFromDB(foodDrink.getFoodDrinkChinesename(), true);
        } else {
            foodDrink.setFoodDrinkName(foodNameField.getText());
            foodDrink = foodDrinkLinker.readTheFoodDrinkInfoFromDB(foodDrink.getFoodDrinkName(), false);
        }//end if-else
        
        foodDrink.setFoodDrinkName(foodNameField.getText());
        foodDrink.setCalorie(Double.parseDouble(calorieField.getText()));
        foodDrink.setCarbohydrate(Double.parseDouble(carboField.getText()));
        foodDrink.setFat(Double.parseDouble(fatField.getText()));
        foodDrink.setMineral(Double.parseDouble(mineralField.getText()) / 1000);
        foodDrink.setProtein(Double.parseDouble(proteinField.getText()));
        foodDrink.setVitamin(Double.parseDouble(vitaField.getText()));
        float waterAmount = (float) (100.0 - foodDrink.getCarbohydrate() - foodDrink.getFat()
                - foodDrink.getProtein() - foodDrink.getVitamin() - foodDrink.getMineral());
        waterField.setText(waterAmount + "");
        foodDrinkLinker.setFoodDrink(foodDrink);

        String hint = "Update food information " + ((foodDrinkLinker.updateFoodDrink()) ? "succeed!" : "failed");
        JOptionPane.showMessageDialog(this, hint);
        
        updateFoodDrinkList();
        this.repaint();
    }//GEN-LAST:event_updateBtActionPerformed

    private void deleteBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtActionPerformed
        // TODO add your handling code here:
        foodDrink = new FoodDrink();
        foodDrinkLinker = new FoodDrinkLinker();
        
        boolean deleteSuccess;
        
        if ((foodChineseNameField != null) && (!foodChineseNameField.getText().split(" ").equals(""))) {
            System.out.println(foodChineseNameField.getText());
            foodDrink.setFoodDrinkChinesename(foodChineseNameField.getText());
            foodDrink = foodDrinkLinker.readTheFoodDrinkInfoFromDB(foodDrink.getFoodDrinkChinesename(), true);
            foodDrinkLinker.setFoodDrink(foodDrink);
            deleteSuccess = foodDrinkLinker.deleteFoodDrinkInfoFromDB(foodDrink.getFoodDrinkChinesename(), true);
        } else {
            foodDrink.setFoodDrinkName(foodNameField.getText());
            foodDrink = foodDrinkLinker.readTheFoodDrinkInfoFromDB(foodDrink.getFoodDrinkName(), false);
            foodDrinkLinker.setFoodDrink(foodDrink);
            deleteSuccess = foodDrinkLinker.deleteFoodDrinkInfoFromDB(foodDrink.getFoodDrinkName(), false);
        }//end if-else      
        
        updateFoodDrinkList();
        this.repaint();
        
        String hint = "Delete food information " + (deleteSuccess? "succeed!" : "failed");
        JOptionPane.showMessageDialog(this, hint);
    }//GEN-LAST:event_deleteBtActionPerformed

    private void chooseTasteBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseTasteBtActionPerformed
        // TODO add your handling code here:
        foodDrinkLinker = new FoodDrinkLinker();
        foodDrink = new FoodDrink();
        if ((foodChineseNameField != null) && (!foodChineseNameField.getText().split(" ").equals(""))) {
            foodDrink.setFoodDrinkChinesename(foodChineseNameField.getText());
            foodDrink = foodDrinkLinker.readTheFoodDrinkInfoFromDB(foodDrink.getFoodDrinkChinesename(), true);
        } else {
            foodDrink.setFoodDrinkName(foodNameField.getText());
            foodDrink = foodDrinkLinker.readTheFoodDrinkInfoFromDB(foodDrink.getFoodDrinkName(), false);
        }//end if-else
        
        TasteFrame tastes = new TasteFrame(foodDrink.getFoodDrinkID());
        tastes.displayFrame();
    }//GEN-LAST:event_chooseTasteBtActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        this.removeAll();
        this.setVisible(false);        
    }//GEN-LAST:event_formWindowClosing

    private void foodJComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_foodJComboItemStateChanged
        // TODO add your handling code here:
        foodDrink = foodDrinkList.get(foodJCombo.getSelectedIndex());
        calorieField.setText(String.format("%.2f", foodDrink.getCalorie()));
        carboField.setText(String.format("%.2f", foodDrink.getCarbohydrate()));
        vitaField.setText(String.format("%.2f", foodDrink.getVitamin()));
        waterField.setText(String.format("%.2f", foodDrink.getWater()));
        mineralField.setText(String.format("%.2f", foodDrink.getMineral() * 1000));
        proteinField.setText(String.format("%.2f", foodDrink.getProtein()));
        fatField.setText(String.format("%.2f", foodDrink.getFat()));
        foodChineseNameField.setText(foodDrink.getFoodDrinkChinesename());
        foodNameField.setText(foodDrink.getFoodDrinkName());
        
        FoodImageLinker picLinker = new FoodImageLinker();
        //TODO add your handling code here:
        
        try {
            imgPath = picLinker.readPicToMemory(foodDrink.getFoodDrinkID());
            File f = new File(imgPath);
            imgLabel.setIcon(new ImageIcon(imgPath));
            imgLabel.setHorizontalAlignment(JLabel.CENTER);
            f.delete();
        } catch (SQLException ex) {
            //It happens, doing nothing.
            imgLabel.setIcon(null);
        }//end try-catch

    }//GEN-LAST:event_foodJComboItemStateChanged

    public void displayFrame() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FoodDrinkFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FoodDrinkFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FoodDrinkFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FoodDrinkFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FoodDrinkFrame().setVisible(true);
        });
    }

    //User variables, can be modified.
    private FoodDrinkLinker foodDrinkLinker;
    private FoodDrink foodDrink;
    
    private LinkedList<FoodDrink> foodDrinkList;
    private LinkedList<String> foodDrinkStrList;
    private String[] foodDrinkStrs;
    private String imgPath;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField calorieField;
    private javax.swing.JTextField carboField;
    private javax.swing.JButton chooseImageBt;
    private javax.swing.JButton chooseTasteBt;
    private javax.swing.JButton deleteBt;
    private javax.swing.JTextField fatField;
    private javax.swing.JTextField foodChineseNameField;
    private javax.swing.JComboBox<String> foodJCombo;
    private javax.swing.JTextField foodNameField;
    private javax.swing.JLabel imgLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mineralField;
    private javax.swing.JFileChooser picJChooser;
    private javax.swing.JTextField proteinField;
    private javax.swing.JButton recordBt;
    private javax.swing.JButton updateBt;
    private javax.swing.JTextField vitaField;
    private javax.swing.JTextField waterField;
    // End of variables declaration//GEN-END:variables
}
